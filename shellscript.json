{
	// Place your snippets for shellscript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"structure if": {
		"prefix": "if",
		"body": [
			"if [[ $1 == $2 ]]",
			"then",
			"",
			"else",
			"",
			"fi"
		],
		"description": "place structure of 'if' condition "
	},
	"structure lif with elif": {
		"prefix": "lif",
		"body": [
			"if [[ $1 == $2 ]]",
			"then",
			"",
			"elif [[ $3 == $4 ]]",
			"then",
			"",
			"fi"
		],
		"description": "place structure of 'if' condition "
	},
	"function structure": {
		"prefix": "func",
		"body": [
			"function t$1()",
			"{",
			"    ",
			"}"
		],
		"description": "place structure of a function "
	},
	"for structure": {
		"prefix": [
			"for",
		],
		"body": [
			"for (($1=$2; $1<$3; $1$4))",
			"do",
			"    $5",
			"done"
		],
		"description": "place structure of for loop"
	},
	"while": {
		"prefix": [
			"while",
		],
		"body": [
			"while($1 == $2)",
			"{",
			"    ",
			"}"
		],
		"description": "place structure of while loop"
	},
	"check first arg": {
		"prefix": [
			"arg",
		],
		"body": [
			"if [ -z \"$1\" ]",
			"then",
			"    echo \"first arg missing\"",
			"else",
			"",
			"fi",
		],
		"description": "place structure of while loop"
	},
	"shebang": {
		"prefix": "shebang",
		"body": [
			"#! /bin/sh",
			"",
			"$1"
		]
	},
	"echo with color": {
		"prefix": "ecc",
		"body": [
			"echo -e $$RED\"$1\"$$RST",
		]
	}
}